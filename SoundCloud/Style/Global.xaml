<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <SolidColorBrush Color="#FFFF5500" x:Key="SoundCloudOrange"/>
    <SolidColorBrush Color="#FFFFFFFF" x:Key="SoundCloudWhite"/>

    <Style TargetType="{x:Type Controls:ToggleSwitch}">
        <Setter Property="OnSwitchBrush" Value="DarkGreen" />
        <Setter Property="OffSwitchBrush" Value="Black" />
        <Setter Property="ThumbIndicatorBrush" Value="#FF949599" />
        <Setter Property="ThumbIndicatorDisabledBrush" Value="#FF949599" />
        <Setter Property="OffLabel" Value="Avaible Offline" />
        <Setter Property="OnLabel" Value="Avaible Offline" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="DarkGreen" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="SubHeaderText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="LineHeight" Value="20" />
    </Style>
    <Style x:Key="ControlBtns" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="17">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <!--Will add click/pressed style later time for bed haha-->
            <Trigger Property="IsPressed"  Value="True">
                <Setter Property="Background" Value="#FF2D2C2A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ControlBtnsPath" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="#FFFFFFFF"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Fill" Value="{StaticResource SoundCloudOrange}" />
            </DataTrigger >
        </Style.Triggers>
    </Style>
    <Style x:Key="ControlBtnsVolume" TargetType="{x:Type Grid}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger >
        </Style.Triggers>
    </Style>
    <Style x:Key="ControlMediaBtnsPath" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="#CCFFFFFF"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Fill" Value="{StaticResource SoundCloudWhite}" />
            </DataTrigger >
        </Style.Triggers>
    </Style>
</ResourceDictionary>